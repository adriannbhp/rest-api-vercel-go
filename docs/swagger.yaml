definitions:
  controllers.CreateBookRequest:
    properties:
      description:
        example: Deskripsi buku
        type: string
      image_url:
        example: https://example.com/gambar.jpg
        type: string
      price:
        example: "29.99"
        type: string
      release_year:
        example: 2021
        type: integer
      title:
        example: Judul Buku5
        type: string
      total_page:
        example: 300
        type: integer
      user_id:
        description: Include user_id in the request payload
        example: 1
        type: integer
    type: object
  controllers.LoginInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  controllers.RegisterInput:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  controllers.UpdateBookRequest:
    properties:
      description:
        example: Deskripsi buku
        type: string
      image_url:
        example: https://example.com/gambar.jpg
        type: string
      price:
        example: "29.99"
        type: string
      release_year:
        example: 2021
        type: integer
      title:
        example: Judul Buku5
        type: string
      total_page:
        example: 300
        type: integer
    type: object
  models.Book:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      image_url:
        type: string
      price:
        type: string
      release_year:
        maximum: 2021
        minimum: 1980
        type: integer
      thickness:
        type: string
      title:
        type: string
      total_page:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    required:
    - image_url
    - price
    - release_year
    - title
    - total_page
    type: object
info:
  contact: {}
paths:
  /books:
    get:
      consumes:
      - application/json
      description: Get all books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
      summary: Get all books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Create a new book with the input payload
      parameters:
      - description: Book
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new book
      tags:
      - books
  /books/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a book
      tags:
      - books
    get:
      consumes:
      - application/json
      description: Get a book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a book by ID
      tags:
      - books
    patch:
      consumes:
      - application/json
      description: Update a book with the input payload
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Book
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a book
      tags:
      - books
  /login:
    post:
      description: Logging in to get jwt token to access admin or user api by roles.
      parameters:
      - description: the body to login a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Login as as user.
      tags:
      - Auth
  /register:
    post:
      description: registering a user from public access.
      parameters:
      - description: the body to register a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Register a user.
      tags:
      - Auth
swagger: "2.0"
